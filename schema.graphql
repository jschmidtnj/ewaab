# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""comment data"""
type Comment {
  """comment content"""
  content: String!

  """date created"""
  created: Float!

  """comment id"""
  id: String!

  """comment post"""
  post: String!

  """comment publisher"""
  publisher: String!

  """publisher user data"""
  publisherData: PublisherData
  reactions(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [ReactionCount!]!

  """date updated"""
  updated: Float!
  userReactions(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [Reaction!]!
}

"""comment sort options"""
enum CommentSortOption {
  created
  updated
}

"""media object"""
type Media {
  """file size"""
  fileSize: Float!
  id: String!

  """mime type of file"""
  mime: String!

  """file name"""
  name: String!

  """parent"""
  parent: String!

  """media type"""
  type: MediaType!
}

"""media data"""
type MediaData {
  """file size"""
  fileSize: Float!
  id: String!

  """mime type of file"""
  mime: String!

  """file name"""
  name: String!

  """media type"""
  type: MediaType!
}

"""media type, used for determining preview type"""
enum MediaType {
  file
  image
}

"""message data"""
type Message {
  """message content"""
  content: String!

  """date created"""
  created: Float!

  """group message recipient"""
  group: String!

  """message id"""
  id: String!

  """message publisher"""
  publisher: String!

  """date updated"""
  updated: Float!
}

"""message group data"""
type MessageGroup {
  """date created"""
  created: Float!

  """group id"""
  id: String!

  """date updated"""
  updated: Float!

  """number of users in group"""
  userCount: Int!

  """group users"""
  userIDs: [String!]!

  """users in active message"""
  users: [PublicUser!]!
}

"""message sort options"""
enum MessageSortOption {
  created
  updated
}

type Mutation {
  addComment(
    """comment content"""
    content: String!

    """post id"""
    post: String!
  ): String!
  addPost(
    """post content"""
    content: String!

    """link"""
    link: String

    """media"""
    media: Upload

    """post title"""
    title: String!

    """post type"""
    type: PostType!
  ): String!
  addReaction(
    """parent id"""
    parent: String!

    """parent type"""
    parentType: ReactionParentType!

    """reaction"""
    reaction: String!
  ): String!
  deleteAccount(
    """email"""
    email: String
  ): String!
  deleteComment(
    """comment id"""
    id: String!
  ): String!
  deleteMessage(
    """message id"""
    id: String!
  ): String!
  deleteMessages(
    """group id"""
    group: String!
  ): String!
  deletePost(
    """post id"""
    id: String!
  ): String!
  deleteReaction(
    """reaction id"""
    id: String!
  ): String!
  inviteUser(
    """alumni year"""
    alumniYear: Int!

    """email"""
    email: String!

    """execute as pseudo-admin when not in production"""
    executeAdmin: Boolean

    """name"""
    name: String!

    """user type"""
    type: UserType = user
  ): String!
  login(
    """password"""
    password: String!

    """recaptcha token"""
    recaptchaToken: String!

    """username or email"""
    usernameEmail: String!
  ): String!
  loginGuest: String!
  logout: String!
  passwordReset(
    """password"""
    password: String!

    """recaptcha token"""
    recaptchaToken: String!

    """reset token"""
    resetToken: String!
  ): String!
  register(
    """email"""
    email: String!

    """name"""
    name: String!

    """password"""
    password: String!

    """pronouns"""
    pronouns: String!

    """recaptcha token"""
    recaptchaToken: String!

    """registration token"""
    registrationToken: String!

    """username"""
    username: String!
  ): String!
  revokeRefresh(
    """email"""
    email: String
  ): String!
  sendMessage(
    """message content"""
    content: String!

    """group id"""
    group: String!
  ): String!
  sendPasswordReset(
    """email"""
    email: String!

    """recaptcha token"""
    recaptchaToken: String!
  ): String!
  sendTestEmail(
    """content"""
    content: String

    """email"""
    email: String!

    """name"""
    name: String!

    """subject"""
    subject: String
  ): String!
  updateAccount(
    """alumni year"""
    alumniYear: Int

    """avatar"""
    avatar: Upload

    """short bio"""
    bio: String

    """description"""
    description: String

    """email"""
    email: String

    """facebook"""
    facebook: String

    """github"""
    github: String

    """user id"""
    id: String

    """job title"""
    jobTitle: String

    """location"""
    location: String

    """location name"""
    locationName: String

    """major"""
    major: String

    """mentor"""
    mentor: String

    """name"""
    name: String

    """password"""
    password: String

    """pronouns"""
    pronouns: String

    """resume"""
    resume: Upload

    """twitter"""
    twitter: String

    """university"""
    university: String

    """url"""
    url: String
  ): String!
  updateComment(
    """comment content"""
    content: String

    """post id"""
    id: String!
  ): String!
  updateMessage(
    """message content"""
    content: String

    """post id"""
    id: String!
  ): String!
  updatePost(
    """content"""
    content: String

    """delete media"""
    deleteMedia: Boolean = false

    """post id"""
    id: String!

    """link"""
    link: String

    """media"""
    media: Upload

    """title"""
    title: String
  ): String!
  usernameExists(
    """recaptcha token"""
    recaptchaToken: String!

    """username"""
    username: String!
  ): Boolean!
  verifyEmail(
    """name"""
    token: String!
  ): String!
}

"""post data"""
type Post {
  """comments"""
  comments(
    """sort direction"""
    ascending: Boolean = true

    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10

    """search query"""
    query: String

    """sort by this field"""
    sortBy: CommentSortOption
  ): SearchCommentsResult

  """post content"""
  content: String!

  """date created"""
  created: Float!

  """post id"""
  id: String!

  """post link"""
  link: String

  """media for post"""
  media: String

  """media data"""
  mediaData: MediaData

  """post publisher"""
  publisher: String!

  """publisher user data"""
  publisherData: PublisherData

  """reactions"""
  reactions(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [ReactionCount!]

  """title"""
  title: String!

  """post type"""
  type: String!

  """date updated"""
  updated: Float!

  """user reactions"""
  userReactions(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [Reaction!]
}

"""post count data"""
type PostCount {
  """posts count"""
  count: Int!

  """post type for count"""
  type: PostType!
}

"""post sort options"""
enum PostSortOption {
  created
  title
  updated
}

"""post type"""
enum PostType {
  community
  ehParticipantNews
  encourageHer
  mentorNews
}

"""public user data (not in search)"""
type PublicUser {
  """alumni year"""
  alumniYear: Int

  """avatar id"""
  avatar: String

  """longer user bio"""
  bio: String!

  """date created"""
  created: Float!

  """short user description"""
  description: String!

  """email"""
  email: String!

  """facebook profile"""
  facebook: String!

  """github profile"""
  github: String!

  """user id"""
  id: String!

  """job title"""
  jobTitle: String!

  """location latitude longitude"""
  location: String

  """location name"""
  locationName: String!

  """major"""
  major: String!

  """mentor"""
  mentor: String

  """name"""
  name: String!

  """user pronouns"""
  pronouns: String!

  """resume id"""
  resume: String

  """twitter account"""
  twitter: String!

  """user type"""
  type: String!

  """university"""
  university: String!

  """date updated"""
  updated: Float!

  """personal url"""
  url: String!

  """username"""
  username: String!
}

"""user data that you can get from post / comment search"""
type PublisherData {
  """avatar id"""
  avatar: String

  """date created"""
  created: Float!

  """short user description"""
  description: String!

  """user id"""
  id: String!

  """name"""
  name: String!

  """date updated"""
  updated: Float!

  """username"""
  username: String!
}

type Query {
  comments(
    """sort direction"""
    ascending: Boolean = true

    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10

    """post id"""
    post: String!

    """search query"""
    query: String

    """sort by this field"""
    sortBy: CommentSortOption
  ): SearchCommentsResult!
  hello: String!
  media(
    """media id"""
    id: String!
  ): Media!
  messageGroups(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [MessageGroup!]!
  messages(
    """sort direction"""
    ascending: Boolean = true

    """page number"""
    page: Int = 0

    """participant"""
    participant: [String!]!

    """number per page"""
    perpage: Int = 10

    """search query"""
    query: String

    """sort by this field"""
    sortBy: MessageSortOption
  ): SearchMessagesResult!

  """post data"""
  post(
    """search query"""
    id: String!
  ): Post!
  posts(
    """sort direction"""
    ascending: Boolean = true

    """created after this date"""
    created: Int

    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10

    """post counts"""
    postCounts: [PostType!]

    """user who published the post"""
    publisher: String

    """search query"""
    query: String

    """sort by this field"""
    sortBy: PostSortOption = created

    """post type"""
    type: PostType
  ): SearchPostsResult!

  """public user data"""
  publicUser(
    """user id"""
    id: Float

    """user name"""
    username: String
  ): PublicUser!

  """user data"""
  user: User!
  users(
    """sort direction"""
    ascending: Boolean = true

    """distance (km)"""
    distance: Float = 100

    """relative location"""
    location: String

    """user major"""
    majors: [String!] = []

    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10

    """search query"""
    query: String

    """sort by this field"""
    sortBy: UserSortOption

    """user type"""
    types: [UserType!] = []
  ): SearchUsersResult!
}

"""reaction data"""
type Reaction {
  """date created"""
  created: Float!

  """reaction id"""
  id: String!

  """parent"""
  parent: String!

  """reaction type"""
  reaction: String!

  """reaction publisher"""
  user: String!
}

"""reaction count"""
type ReactionCount {
  """count for reaction type"""
  count: Int!

  """parent"""
  parent: String!

  """type of reaction"""
  type: String!
}

"""reaction parent type"""
enum ReactionParentType {
  comment
  message
  post
}

"""reactions data"""
type ReactionsData {
  """counts for all given reactions"""
  counts: [ReactionCount!]!

  """reactions a given user made"""
  reactions: [String!]!
}

"""comment data, indexed in elasticsearch"""
type SearchComment {
  """comment content"""
  content: String!

  """date created"""
  created: Float!

  """comment id"""
  id: String!

  """comment post"""
  post: String!

  """comment publisher"""
  publisher: String!

  """publisher user data"""
  publisherData: PublisherData
  reactions(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [ReactionCount!]!

  """date updated"""
  updated: Float!
  userReactions(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [Reaction!]!
}

"""comment data search results"""
type SearchCommentsResult {
  """total comments count"""
  count: Int!

  """reactions"""
  reactions: [ReactionCount!]

  """results"""
  results: [SearchComment!]!

  """user reactions"""
  userReactions: [Reaction!]
}

"""message data, indexed in elasticsearch"""
type SearchMessage {
  """message content"""
  content: String!

  """date created"""
  created: Float!

  """group message recipient"""
  group: String!

  """message id"""
  id: String!

  """message publisher"""
  publisher: String!

  """date updated"""
  updated: Float!
}

"""message data search results"""
type SearchMessagesResult {
  """total message count"""
  count: Int!

  """results"""
  results: [SearchMessage!]!
}

"""post data, indexed in elasticsearch"""
type SearchPost {
  """comments"""
  comments(
    """sort direction"""
    ascending: Boolean = true

    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10

    """search query"""
    query: String

    """sort by this field"""
    sortBy: CommentSortOption
  ): SearchCommentsResult

  """post content"""
  content: String!

  """date created"""
  created: Float!

  """post id"""
  id: String!

  """post link"""
  link: String

  """media for post"""
  media: String

  """media data"""
  mediaData: MediaData

  """post publisher"""
  publisher: String!

  """publisher user data"""
  publisherData: PublisherData

  """reactions"""
  reactions(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [ReactionCount!]

  """title"""
  title: String!

  """post type"""
  type: String!

  """date updated"""
  updated: Float!

  """user reactions"""
  userReactions(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [Reaction!]
}

"""post data search results"""
type SearchPostsResult {
  """total posts count"""
  count: Int!

  """aggregate counts of posts"""
  postCounts: [PostCount!]!

  """results"""
  results: [SearchPost!]!
}

"""user data, indexed for search"""
type SearchUser {
  """alumni year"""
  alumniYear: Int

  """avatar id"""
  avatar: String

  """date created"""
  created: Float!

  """short user description"""
  description: String!

  """email"""
  email: String!

  """user id"""
  id: String!

  """location latitude longitude"""
  location: String

  """location name"""
  locationName: String!

  """major"""
  major: String!

  """name"""
  name: String!

  """user type"""
  type: String!

  """university"""
  university: String!

  """date updated"""
  updated: Float!

  """username"""
  username: String!
}

"""user data search results"""
type SearchUsersResult {
  """total users count"""
  count: Int!

  """results"""
  results: [SearchUser!]!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

"""user account"""
type User {
  """active message groups"""
  activeMessageGroups(
    """page number"""
    page: Int = 0

    """number per page"""
    perpage: Int = 10
  ): [MessageGroup!]!

  """alumni year"""
  alumniYear: Int

  """avatar id"""
  avatar: String

  """longer user bio"""
  bio: String!

  """date created"""
  created: Float!

  """short user description"""
  description: String!

  """email"""
  email: String!

  """email verified"""
  emailVerified: Boolean!

  """facebook profile"""
  facebook: String!

  """github profile"""
  github: String!

  """user id"""
  id: String!

  """job title"""
  jobTitle: String!

  """location latitude longitude"""
  location: String

  """location name"""
  locationName: String!

  """major"""
  major: String!

  """media auth token"""
  mediaAuth: String!

  """mentor"""
  mentor: String

  """name"""
  name: String!

  """user pronouns"""
  pronouns: String!

  """resume id"""
  resume: String

  """current token version"""
  tokenVersion: Float!

  """twitter account"""
  twitter: String!

  """user type"""
  type: String!

  """university"""
  university: String!

  """date updated"""
  updated: Float!

  """personal url"""
  url: String!

  """username"""
  username: String!
}

"""user sort options"""
enum UserSortOption {
  email
  location
  major
  name
}

"""user type"""
enum UserType {
  admin
  mentor
  user
  visitor
}
